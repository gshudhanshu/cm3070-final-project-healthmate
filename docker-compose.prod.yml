version: '3.8'

services:
  server:
    container_name: server
    build:
      context: ./server
      dockerfile: Dockerfile
    stdin_open: true
    tty: true
    working_dir: /src
    ports:
      - '8001:8000'
    volumes:
      - ./server:/src
      - static_volume:/src/static
      - media_volume:/src/media

    env_file:
      - ./.env
    environment:
      - DJANGO_DEBUG=False
      - GUNICORN_WORKERS=5
    command: >
      sh -c "sh migrations.sh && gunicorn -w 5 --reload -b 0.0.0.0:8000 --log-level info server.wsgi"
    depends_on:
      - db
      - redis

  client:
    container_name: client
    build: ./client
    stdin_open: true
    tty: true
    working_dir: /src
    ports:
      - '3001:3000'
    volumes:
      - ./client:/src
    command: >
      sh -c "npm install -g npm@latest && npm install && npm run build && npm run start"
    depends_on:
      - server
      - db

  db:
    container_name: db
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env

  redis:
    container_name: redis_db
    image: redis:alpine
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local
